.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "tmuxtutor.windows 1"
.TH tmuxtutor.windows 1 "July 2016" "Generated by Swim v0.1.43" "Working with windows"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Name"
.IX Header "Name"
tmuxtutor.windows \- Working with windows
.PP
You are in window 0 right now. To go to this window from anywhere, type
.PP
.Vb 1
\&      PREFIX + 0
.Ve
.PP
Let's open a a new window with
.PP
.Vb 1
\&      PREFIX + c
.Ve
.PP
You will be in that new window number 1 now and see an additional entry in the status bar at the bottom.
.SS "Navigating windows"
.IX Subsection "Navigating windows"
You can interactively choose any window by typing
.PP
.Vb 1
\&      PREFIX + w
.Ve
.PP
This will give you a list of windows in your session.
.PP
Windows with numbers 0\-9 are a bit easier to access. Just type
.PP
.Vb 1
\&      PREFIX + n
.Ve
.PP
where n is the window number.
.PP
Another possibility is to be prompted for the number:
.PP
.Vb 1
\&      PREFIX + \*(Aq
.Ve
.PP
lets you type in a number, so this is especially useful for windows with an index greater than 9.
.PP
You can also navigate to the last recently used window with
.PP
.Vb 1
\&      PREFIX + l
.Ve
.PP
Play around by opening/closing windows and navigating between them.
.PP
Go to the next
.PP
.Vb 1
\&      PREFIX + n
.Ve
.PP
or previous window
.PP
.Vb 1
\&      PREFIX + p
.Ve
.SS "Window titles"
.IX Subsection "Window titles"
You can give a title to a window with:
.PP
.Vb 1
\&      PREFIX + ,
.Ve
.PP
You can see the window titles in the status bar.
.PP
If you want to move the window to another position, type:
.PP
.Vb 1
\&      PREFIX + .
.Ve
.PP
You can now enter the new position.
.SS "Closing windows"
.IX Subsection "Closing windows"
Typing exit or \f(CW\*(C`CTRL\-d\*(C'\fR will close a shell and the window, but there's also a command:
.PP
.Vb 1
\&      PREFIX + &
.Ve
.PP
It asks for confirmation.
