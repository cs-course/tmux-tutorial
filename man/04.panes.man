.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "tmuxtutor.panes 1"
.TH tmuxtutor.panes 1 "July 2016" "Generated by Swim v0.1.43" "Working with panes"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Name"
.IX Header "Name"
tmuxtutor.panes \- Working with panes
.PP
Windows are nice, but often you want to see several windows at the same time; for viewing log files, showing the output of your test suite, manage your git commits etc.
.PP
For that, tmux has panes inside of windows.
.PP
Splitting a window into two panes is easy. To split vertical, type
.PP
.Vb 1
\&      PREFIX + %
.Ve
.PP
To split horizontally, use
.PP
.Vb 1
\&      PREFIX + "
.Ve
.PP
So now create a new pane by \s-1PREFIX +\s0 %. The new pane is automatically focused.
.PP
To navigate, you can use the arrow keys. So to go back to this pane, type
.PP
.Vb 1
\&      PREFIX + Left
.Ve
.PP
To quickly navigate between two panes, use
.PP
.Vb 1
\&      PREFIX + ;
.Ve
.PP
Remember:
.PP
.Vb 2
\&      Last window: PREFIX + l
\&      Last pane:   PREFIX + ;
.Ve
.PP
To go to the next pane, type
.PP
.Vb 1
\&      PREFIX + o
.Ve
.PP
Remember you can always type
.PP
.Vb 1
\&      PREFIX + ?
.Ve
.PP
to get a list of all keys.
.PP
To see all pane numbers, and to navigate to a pane, type
.PP
.Vb 1
\&      PREFIX + q
.Ve
.PP
You will see a number displayed in every pane for two seconds. The active one is displayed in red. You can then type in the number to navigate to that pane.
.SS "Move panes around"
.IX Subsection "Move panes around"
Two swap a pane with the previous/next one, type
.PP
.Vb 2
\&      PREFIX + {
\&      PREFIX + }
.Ve
.SS "Zooming panes"
.IX Subsection "Zooming panes"
Now, let's say you have two vertical panes, so they have only half of the size of your terminal. This can sometimes be problematic.
.PP
You'll notice that you cannot copy content from just one pane. When you cannot use the tmux copy & paste, you want to be able to select content like you do in your normal terminal.
.PP
Or wou want to show a side-by-side diff with vimdiff and just need more space.
.PP
There is a shortcut for temporarily zoom in/out a pane with
.PP
.Vb 1
\&      PREFIX + z
.Ve
.PP
Try it with this one here. To unzoom, just use the same key again.
.SS "Closing panes"
.IX Subsection "Closing panes"
Just like for windows, there's a command to close a pane:
.PP
.Vb 1
\&      PREFIX + x
.Ve
